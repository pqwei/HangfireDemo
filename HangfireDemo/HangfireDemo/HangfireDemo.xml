<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HangfireDemo</name>
    </assembly>
    <members>
        <member name="T:HangfireDemo.Common.JobHelper.ContinueJob">
            <summary>
            延续性任务执行(Continuations)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HangfireDemo.Common.JobHelper.ContinueJob.AddOrUpdate(System.String,System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}})" -->
        <member name="M:HangfireDemo.Common.JobHelper.ContinueJob.AddOrUpdate(System.String,System.Linq.Expressions.Expression{System.Action})">
            <summary>
            创建/更新父节点名称为parentId的任务
            </summary>
            <param name="parentId"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:HangfireDemo.Common.JobHelper.CycleCronType">
            <summary>
            周期性内容的Cron生成器
            </summary>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Minute(System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为分钟的任务
            </summary>
            <param name="interval">执行周期的间隔，默认为每分钟一次</param>
            <returns></returns>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Hour(System.Int32,System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为小时的任务
            </summary>
            <param name="minute">第几分钟开始，默认为第一分钟</param>
            <param name="interval">执行周期的间隔，默认为每小时一次</param>
            <returns></returns>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Day(System.Int32,System.Int32,System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为天的任务
            </summary>
            <param name="hour">第几小时开始，默认从1点开始</param>
            <param name="minute">第几分钟开始，默认从第1分钟开始</param>
            <param name="interval">执行周期的间隔，默认为每天一次</param>
            <returns></returns>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Week(System.DayOfWeek,System.Int32,System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为周的任务
            </summary>
            <param name="dayOfWeek">星期几开始，默认从星期一点开始</param>
            <param name="hour">第几小时开始，默认从1点开始</param>
            <param name="minute">第几分钟开始，默认从第1分钟开始</param>
            <returns></returns>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Month(System.Int32,System.Int32,System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为月的任务
            </summary>
            <param name="day">几号开始，默认从一号开始</param>
            <param name="hour">第几小时开始，默认从1点开始</param>
            <param name="minute">第几分钟开始，默认从第1分钟开始</param>
            <returns></returns>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.CycleCronType.Year(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建/更新名称为jobId周期性为年的任务
            </summary>
            <param name="month">几月开始，默认从一月开始</param>
            <param name="day">几号开始，默认从一号开始</param>
            <param name="hour">第几小时开始，默认从1点开始</param>
            <param name="minute">第几分钟开始，默认从第1分钟开始</param>
            <returns></returns>
        </member>
        <member name="T:HangfireDemo.Common.JobHelper.CycleJob">
            <summary>
            定时任务执行(Recurring jobs)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HangfireDemo.Common.JobHelper.CycleJob.AddOrUpdate(System.String,System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:HangfireDemo.Common.JobHelper.CycleJob.AddOrUpdate(System.String,System.Linq.Expressions.Expression{System.Action},System.String)" -->
        <member name="T:HangfireDemo.Common.JobHelper.DelayedJob">
            <summary>
            延迟任务执行(Delayed jobs)
            </summary>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.DelayedJob.AddOrUpdate(System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}},System.Int32)">
            <summary>
            创建延迟任务
            </summary>
            <param name="expression">执行的函数</param>
            <param name="minute">延迟的分钟数</param>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.DelayedJob.AddOrUpdate(System.Linq.Expressions.Expression{System.Action},System.Int32)">
            <summary>
            创建延迟任务
            </summary>
            <param name="expression">执行的函数</param>
            <param name="minute">延迟的分钟数</param>
        </member>
        <member name="T:HangfireDemo.Common.JobHelper.QueueJob">
            <summary>
            基于队列的任务处理(Fire-and-forget jobs)
            </summary>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.QueueJob.AddOrUpdate(System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}})">
            <summary>
            创建队列任务
            </summary>
            <param name="expression">执行的函数</param>
        </member>
        <member name="M:HangfireDemo.Common.JobHelper.QueueJob.AddOrUpdate(System.Linq.Expressions.Expression{System.Action})">
            <summary>
            创建队列任务
            </summary>
            <param name="expression">执行的函数</param>
        </member>
        <member name="T:HangfireDemo.Common.ResponseModel`1">
            <summary>
            响应实体
            </summary>
        </member>
        <member name="F:HangfireDemo.Common.ResponseModel`1._status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:HangfireDemo.Common.ResponseModel`1.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:HangfireDemo.Common.ResponseModel`1.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:HangfireDemo.Common.ResponseModel`1.values">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="T:HangfireDemo.Handlers.JobHandler">
            <summary>
            Job处理程序
            </summary>
        </member>
        <member name="F:HangfireDemo.Handlers.TaskHandler.DataCalculateNodes">
            <summary>
            DataCalculate节点
            </summary>
        </member>
        <member name="M:HangfireDemo.Handlers.TaskHandler.Invoke(System.String,System.Int32,System.Object)">
            <summary>
            执行Task
            </summary>
            <param name="taskId"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:HangfireDemo.Handlers.TaskHandler.InvokeDataCalculate(System.String,System.Int32,System.Object)">
            <summary>
            执行DataCalculate
            </summary>
            <param name="dataCalculateNode"></param>
            <param name="taskId"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:HangfireDemo.Startup.provider">
            <summary>
            Api版本信息
            </summary>
        </member>
    </members>
</doc>
